console.log('---------Functions Accepting Callback Functions---------');

//kiszedi a sz√≥k√∂z√∂ket a string-b≈ël
const oneWord = function (str) {
  return str.replace(/ /g, '').toLowerCase();
};

//a string els≈ë szav√°t nagybet≈±ss√© teszi
const upperFirstWord = function (str) {
  //rest oper√°tor
  const [first, ...others] = str.split(' ');
  //spread oper√°tor
  return [first.toUpperCase(), ...others].join(' ');
};

// transformer egy Higher-order function aminek param√©terk√©nt egy f√ºggv√©nyt adunk √°t, ami egy low level function
//a higher function feladata, hogy v√©grehajtsa a feladatot, de az nem √©rdekli, hogy hogyan. A hogyan√©rt a low level function felel.
const transformer = function (str, fn) {
  console.log(`Original string: ${str}`);
  console.log(`Transformed string: ${fn(str)}`);

  console.log(`Transformed by: ${fn.name}`);
};

//itt csak a f√ºggv√©ny√°tad√°s t√∂rt√©nik √©s nem f√ºggv√©ny h√≠v√°s. Ez√©rt csak a f√ºggv√©ny nev√©t kell megadni - upperFirstWord - √©s nem h√≠vni  azt- upperFirstWord()
transformer('JavaScript is the best!', upperFirstWord);
transformer('JavaScript is the best!', oneWord);

//addeventlisteners-nek √°tadottf√ºggv√©ny
const high5 = function () {
  console.log('üëã');
};
//a body ter√ºletre kattintva aktiv√°l√≥dik a high5 f√ºggv√©ny
//document.body.addEventListener('click', high5);

//egy t√∂mb√∂t a forEach-el bej√°rva a for-nak egy f√ºggv√©nyt adunk √°t
['Jonas', 'Martha', 'Adam'].forEach(high5);
