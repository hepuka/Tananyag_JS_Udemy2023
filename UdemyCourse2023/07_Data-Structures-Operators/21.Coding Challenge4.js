console.log('--------Coding Challenge #4-----------');
/* 
Write a program that receives a list of variable names written in underscore_case and convert them to camelCase.

The input will come from a textarea inserted into the DOM (see code below), and conversion will happen when the button is pressed.

THIS TEST DATA (pasted to textarea)
underscore_case
 first_name
Some_Variable 
  calculate_AGE
delayed_departure

SHOULD PRODUCE THIS OUTPUT (5 separate console.log outputs)
underscoreCase      ‚úÖ
firstName           ‚úÖ‚úÖ
someVariable        ‚úÖ‚úÖ‚úÖ
calculateAge        ‚úÖ‚úÖ‚úÖ‚úÖ
delayedDeparture    ‚úÖ‚úÖ‚úÖ‚úÖ‚úÖ

HINT 1: Remember which character defines a new line in the textarea üòâ
HINT 2: The solution only needs to work for a variable made out of 2 words, like a_b
HINT 3: Start without worrying about the ‚úÖ. Tackle that only after you have the variable name conversion working üòâ
HINT 4: This challenge is difficult on purpose, so start watching the solution in case you're stuck. Then pause and continue!

Afterwards, test with your own test data!
*/

document.body.append(document.createElement('textarea'));
document.body.append(document.createElement('button'));

document.querySelector('button').addEventListener('click', function () {
  //a sz√∂vegdoboz tartalm√°t √≠ratom ki a console-ra
  const text = document.querySelector('textarea').value;

  //sort√∂r√©sn√©l sz√©tv√°gom a stringet, √©s ezek a sorok lesznek at√∂mb egyes elemei
  const rows = text.split('\n');

  for (const [index, row] of rows.entries()) {
    //a kapott sort kisbet≈±ss√© teszem, kiszedem a sz√≥k√∂z√∂ket majd _-n√°l sz√©tv√°gom
    const [first, second] = row.toLowerCase().trim().split('_');

    // a t√∂mb 0.elem√©t (first) √©s az 1. elem√©t(second) egym√°smell√© teszem, majd a az els≈ë elem kezd≈ëbet≈±j√©t kicser√©lem az az els≈ë elem nagybet≈±j√©re
    const output = `${first}${second.replace(
      second[0],
      second[0].toUpperCase()
    )}`;

    //padEnd-el adom meg, hogy a string teljes hossza 20 karakter legyen. az egyes sorokban l√©v≈ë stringek hossza egyforma lesz, kieg√©sz√≠tve √ºres stringekkel.
    //az √≠gy elk√©sz√≠tett stringhez hozz√° kell rakni a pipa jelet,majd erre megh√≠vni a repeat met√≥dust
    console.log(`${output.padEnd(20)}${'‚úÖ'.repeat(index + 1)}`);
  }
});

console.log('--------Coding Challenge #4 V√âGE-----------');
