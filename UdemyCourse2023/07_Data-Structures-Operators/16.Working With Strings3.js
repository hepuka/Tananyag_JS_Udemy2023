console.log('-----------Working With Strings - Part 3-----------');

//SPLIT and JOIN
//a megadott karaktern√©l sz√©tv√©gja a stringet √©s a r√©szstringet egy t√∂mb elemek√©nt egy t√∂mbe rakja
console.log('a+very+nice+string'.split('+'));
console.log('Jonas Schmedtmann'.split(' '));

//split-et destrukt√∫r√°l√°shoz is haszn√°lhatjuk
//a visszakapott t√∂mb els≈ë elem lesz a firstName √©s a m√°sodik lesz a lastName
const [firstName, lastName] = 'Jonas Schmedtmann'.split(' ');

//a JOIN-al tudom a t√∂mben l√©v≈ë elemeket konkaten√°lni egym√°shoz a megadott karakterrel. itt egy sz√≥k√∂zt adtam meg
const newName = ['Mr.', firstName, lastName.toUpperCase()].join(' ');
console.log(newName);

//a kapott n√©v els≈ë bet≈±it nagybet≈±ss√© teszi
const capitalizeName = function (name) {
  const names = name.split(' ');
  const namesUpper = []; //√∫j t√∂mb az √∫j n√©vnek

  for (const n of names) {
    namesUpper.push(n[0].toUpperCase() + n.slice(1));
    //namesUpper.push(n.replace(n[0], n[0].toUpperCase()));
  }
  console.log(namesUpper.join(' ')); //az √∫j t√∂mbben l√©v≈ë elemeket sz√≥k√∂z√∂kkel konkaten√°ljuk
};

capitalizeName('jessica ann smith davis');
capitalizeName('jonas schmedtmann');

// Padding
const message = 'Go to gate 23!';

//a megadott string el√© √©s m√∂g√© tesz karaktereket. padStart √©s End els≈ë param√©tere, hogy a megadott karakterrel mennyi legyen a string hossza

//padStart miatt √∂sszesen a hozz√°adott + jellel egy√ºtt 20 karakter lenne a string, de hozz√° van f≈±zve egy padEnd is, √≠gy a string v√©gleges hossza 30 lesz
console.log(message.padStart(20, '+').padEnd(30, '+'));
console.log('Jonas'.padStart(20, '+').padEnd(30, '+'));

//
const maskCreditCard = function (number) {
  //itt a kapott sz√°mot els≈ënek string√© alak√≠tjuk
  //a + jel string√© alak√≠tja a sz√°mot
  const str = number + '';

  //a k√°rytak√≥d utols√≥ 4 karakter√©t adja csak vissza
  const last = str.slice(-4);

  //ez a 4 karakter el√© rak annyi csillagot hogy a v√©geleges string hossza az az eredeti string hossza legyen
  return last.padStart(str.length, '*');
};

console.log(maskCreditCard(64637836));
console.log(maskCreditCard(43378463864647384));
console.log(maskCreditCard('334859493847755774747'));

// Repeat
const message2 = 'Bad waether... All Departues Delayed... ';

//5-sz√∂r egym√°s ut√°n rakja a megadott stringet
console.log(message2.repeat(5));

//a megadott sz√°m√∫ rep√ºl≈ëg√©pet rak a string ut√°n
const planesInLine = function (n) {
  console.log(`There are ${n} planes in line ${'üõ©'.repeat(n)}`);
};

planesInLine(5);
planesInLine(3);
planesInLine(12);
